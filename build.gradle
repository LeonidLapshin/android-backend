/**
 * Gradle's top-level build file which defines the repositories to pull the dependencies from
 * and the default dependency versions used in most modules.
 *
 * @author Armin Schnabel
 * @author Klemens Muthmann
 * @version 2.0.0
 * @since 1.0.0
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        // Added to find the build tools 3.0.1 dependency below via ./gradlew
        google()
        jcenter()
    }
    dependencies {
        // You need to run the integration-test module as 'Android Instrumented Test' run config
        // There is still an open issue (and two bugs) with the currently used version:
        // - Warning: Variant selection conflicts (https://stackoverflow.com/q/47529737/5815054)
        // - Instant Run Error (https://stackoverflow.com/q/46957873/5815054)
        // Workaround: disable instant run & ignore Gradle Sync Warnings
        classpath 'com.android.tools.build:gradle:3.1.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext {
    groupId = 'de.cyface'

    minSdkVersion = 16
    targetSdkVersion = 27
    compileSdkVersion = 27
    buildToolsVersion = '27.0.3'
    supportLibVersion = "27.1.1"
    playServicesVersion = "12.0.1"

    junitVersion = "4.12"
    mockitoVersion = "1.10.19"
    hamcrestVersion = "1.3"
    // Version 1.0.2-alpha1 required due to incompatibility between Android Studio 3.1 and Robolectric
    runnerVersion = "1.0.2-alpha1"
    rulesVersion = "1.0.2-alpha1"
    robolectricVersion = "3.8"
    //espressoVersion = "3.0.2-alpha1"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
}

group = ext.groupId

allprojects {
    repositories {
        // Needed to resolve newest support libraries with IntelliJ / Gradle
        google()
        jcenter()
    }

    // Uncomment this for additional warnings.
    /*gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }*/
}

apply plugin: 'android-reporting'

configure(subprojects.findAll({ it.name in ["persistence", "synchronization", "datacapturing"] })) {
    pr ->
        apply plugin: 'com.android.library'
        apply plugin: 'maven-publish'

        group = rootProject.group

        task sourceJar(type: Jar) {
            from android.sourceSets.main.java.srcDirs
            classifier "source"
        }

        publish.dependsOn 'assembleRelease'

        publishing {
            publications {
                "${project.name}-mock"(MavenPublication) {
                    groupId project.group
                    artifactId "${project.name}-mock"
                    version android.defaultConfig.versionName
                    artifact(sourceJar)
                    artifact("$buildDir/outputs/aar/${project.name}-mock-release.aar")
                }
                "${project.name}-full"(MavenPublication) {
                    groupId project.group
                    artifactId "${project.name}"
                    version android.defaultConfig.versionName
                    artifact(sourceJar)
                    artifact("$buildDir/outputs/aar/${project.name}-full-release.aar")
                }
            }
            repositories {
                mavenLocal()
            }
        }
}

task publishAll() {
    subprojects.each { pr ->
        dependsOn {
            pr.tasks.findAll { task -> task.name.endsWith('publish') }
        }
    }
    outputs.upToDateWhen { false }
}
publishAll.outputs.upToDateWhen { false }

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}

// Auto-generated by Android Studio
task clean(type: Delete) {
    delete rootProject.buildDir
}
